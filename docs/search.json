{
  "articles": [
    {
      "path": "about.html",
      "title": "Notes on github classrooms and rstudio cloud",
      "description": "Some updates about interfacing between github classroom",
      "author": [],
      "contents": "\nRstudio\nSign-up for a GitHub account. Install R, RStudio, and GIT on your computer.\nStudents will need to load their GIT config in RStudio. (see section 7,9,11,12 of https://happygitwithr.com/)\nStudents need to delete their cloned directories manually between RStudio sessions.\nRstudio cloud\nSign-up for a rstudio cloud account and a github account.\nStudents will need to link their rstudio cloud account to github and enable private repos. RSC is good about prompting for when attempting to create a project from a private repo.\nLess obviously, you will need to enable 3rd-party API access from the GH classroom organization. Note that I don’t entirely understand the security implications, rstudio probably should find a way to invite access via the github API rather than requiring carte blanche access.\nStudents don’t have a class workspace on RSC this year, their default (free) workspaces will eventually run out of compute…\nIt’s amazing how much compute your class will burn. The calculated usage seemed to be about 2x what students self-reported that their homework took. I only had 9 students, and don’t know if it would be tenable to use RSC in a larger classroom.\n(This is part of why we’re not using it this year.)\nGithub classrooms\nEven if you use the github classroom web api, you may want to install Mine Cetinkaya-Rundel and colleagues’ excellent ghclass package.\nAndrew used it to manage the class:\nSet up team assignments\nPush edits to existing assignments\nClone all student repos for grading, branching, and other housekeeping\nUnwatch student repos, so you aren’t buried in github spam whenever your students make commits\nBranch against the initial commit (useful for grading via pull requests)\nAt some point, I will post excerpts from the script I used to manage assignments.\nGrading with github classrooms\nYou can use pull requests, but you’ll need to make sure you have a branch created against the initial commit.\n(See previous bullet). Although you can do this post-hoc, life will be easier if you do it ahead of time.\nI could not figure out a good way to collaborate with TAs in the grading without sending the students (pre-mature and possibly incorrect) feedback. Basically, a way to mute a pull request before it’s submitted would be useful.\n\n\n\n",
      "last_modified": "2023-08-28T10:43:55-04:00"
    },
    {
      "path": "index.html",
      "title": "BST430 - Introduction to Statistical Computing",
      "description": "University of Rochester, Fall 2022",
      "author": [],
      "contents": "\nAdministrivia\nTTh 11:00-12:40, SRB 1404 (but sometimes 1402)\nInstructor: Tanzy Love\nWebsite: https://bst-urmc.github.io/bst430-fall2022-site/\nSyllabus\nContent\nIntroduction\nMeet the toolkit\nInvites to GitHub class room are on blackboard\nReq readings: r4ds 3.1-3.5, 4.\nOptional readings: https://happygitwithr.com/\n\nResources:\ninstall GIT\ninstall base R\ninstall RStudio\nLab 0 instructions and repo (accept GH classroom invite in Blackboard).\n\nggplot(i)\nLab 1 instructions and repo (accept GH classroom invite). Due 5pm, Sept 16.\nLab 1 solutions\n\ndplyr(i)\nContinue working on Lab 1\nHW 1 assigned. instructions and repo (accept GH classroom invite). Due 5pm EDT, Sept 23.\nHW 1 solutions\n\nData types in R.\nReshaping and combining data frames.\nLab 2. You will need to accept the invitation.\nDue 5pm, Sept 28.\nLab 2 solutions\n\nFinish L5a. dplyr(ii)\nLab 3. To be completed in same group as lab 2, invitation here. Due 5pm, Oct 5.\nLab 3 solutions\n\nFinish L5b. Factors and dates\nContinue working on Lab 3\nHW 2 assigned. instructions and repo (accept GH classroom invite). Due 5pm EDT, Oct 15.\nHW 2 solutions\n\nEffective data visualization (i) (ii) video\nTurn in lab 3 by tomorrow.\n\nData from files\nRepository for lecture 9 here will not be graded, but gets you everything you need at once.\nLab 4. New groups! At least one new teammate for each person.\nInvitation here. Due 5pm, Oct 12.\nLab 4 solutions\n\nFinish visualization slides\nstyleguide\n\nFinish lab 4.\nText processing video link\nHW 3 assigned. instructions and repo (accept GH classroom invite). Due 5pm EDT, Oct 28.\nHW 3 solutions\n\nText analysis video link\nLab 5. Pair up; take turns and then you won’t have so many GitHub problems. Invitation here. Due 5pm, Oct 25.\nLab 5 solutions\nReading: r4ds chapter 14\n\nMatrices, indexing, linear algebra\nFinish Lab 5\n\nFunctions i. video link\nFunctions ii and iteration. video link\nLab 6 assigned, any groups as you like. Invitation here. Due 5pm, Nov 16.\nLab 6 solutions\n\nKnitr tricks and debugging. video link\nHW 4 assigned (revised to shorten it!!). instructions and repo (accept GH classroom invite). Due 5pm EDT, Nov 25.\nHW 4 solutions\n\nWork on Lab 6\nLinear models\nWork on Lab 6\nNo class 11/10, work on your final exam.\nFinal Exam. Remember I will be looking at the .md for results and the .Rmd for your code. instructions and repo (accept GH classroom invite). Due 5pm EDT, Nov 10.\nMultivariate linear models and Prediction video link\nWork on Lab 6\n\n\n\n",
      "last_modified": "2023-08-28T10:43:56-04:00"
    }
  ],
  "collections": []
}
